# We have deployed a few pods in this cluster in various namespaces. Inspect them and identify the pod which is not in a Ready state. Troubleshoot and fix the issue.

# Next, add a check to restart the container on the same pod if the command ls /var/www/html/file_check fails. This check should start after a delay of 10 seconds and run every 60 seconds.

# You may delete and recreate the object. Ignore the warnings from the probe.

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx1401
  namespace: dev1401
spec:
  containers:
  - image: kodekloud/nginx
    imagePullPolicy: IfNotPresent
    name: nginx
    ports:
    - containerPort: 9080
      protocol: TCP
    readinessProbe:
      httpGet:
        path: /
        port: 9080    
    livenessProbe:
      exec:
        command:
        - ls
        - /var/www/html/file_check
      initialDelaySeconds: 10
      periodSeconds: 60


#Create a pod called my-busybox in the dev2406 namespace using the busybox image. The container should be called secret and should sleep for 3600 seconds.

# The container should mount a read-only secret volume called secret-volume at the path /etc/secret-volume. The secret being mounted has already been created for you and is called dotfile-secret.

# Make sure that the pod is scheduled on controlplane and no other node in the cluster.
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: my-busybox
  name: my-busybox
  namespace: dev2406
spec:
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret
  nodeSelector:
    kubernetes.io/hostname: controlplane
  containers:
  - command:
    - sleep
    args:
    - "3600"
    image: busybox
    name: secret
    volumeMounts:
    - name: secret-volume
      readOnly: true
      mountPath: "/etc/secret-volume"





---
apiVersion: v1
kind: Pod
metadata:
  name: my-busybox
  namespace: dev2406
spec:
  restartPolicy: Always            # Always, OnFailure, Never
  containers:
  - name: secret
    image: busybox
    command: ["sleep", "3600"]
    volumeMounts:
    - name: secret-volume
      mountPath: /etc/secret-volume
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret

---
apiVersion: v1
kind: Service
metadata:
  name: messaging-service
  namespace: marketing
spec:
  selector:
    name: redis-pod
  type: ClusterIP                      # ClusterIP, NodePort, LoadBalancer, ExternalName
  #  sessionAffinity: ClientIP
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret-xxdf
data:
  DB_Host: sql01
  DB_User: root
  DB_Password: password123

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-analytics
spec:
  resources:
    requests:
      storage: 100Mi
  accessModes:
  - ReadWriteMany                  # ReadWriteOnce, ReadWriteMany, ReadOnlyMany, ReadWriteOncePod
  hostPath:
    path: /pv/data-analytics

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  hostPath:
    path: /pv/data-analytics
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        imagePullPolicy: IfNotPresent  # Always, IfNotPresent, Never

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  type: ClusterIP                      # ClusterIP, NodePort, LoadBalancer, ExternalName
  #  sessionAffinity: ClientIP
  ports:
  - port: 6379
    targetPort: 6379

---
  apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: redis-access
  spec:
    podSelector:
      matchLabels:
        app: redis
    ingress:
    - from:
      - podSelector:
          matchLabels:
            access: redis
      ports:
      - protocol: TCP
        port: 6379

---
apiVersion: v1
kind: Pod
metadata:
  name: sega
  labels:
    app: sega
spec:
  restartPolicy: Always            # Always, OnFailure, Never
  containers:
  - name: tails
    image: busybox
    command:
    - sh
    - -c
    args:
    - "sleep 3600"
  - name: sonic
    image: nginx
    env:
    - name: NGINX_PORT
      value: "8080"

---
kubectl create secret generic db-secret-xxdf --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password=password123