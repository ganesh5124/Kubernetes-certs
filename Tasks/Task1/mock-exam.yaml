# Create a deployment called my-webapp with image: nginx, label tier:frontend and 2 replicas. 
# Expose the deployment as a NodePort service with name front-end-service , 
# port: 80 and NodePort: 30083

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webapp
  labels:
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      restartPolicy: Always            # Always, OnFailure, Never
      containers:
      - name: my-webapp
        image: nginx
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
spec:
  selector:
    tier: frontend
  type: NodePort                      # ClusterIP, NodePort, LoadBalancer, ExternalName
  #  sessionAffinity: ClientIP
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30083                   # Port number in the range 30000-32767
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: beta-apps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: beta-apps
  template:
    metadata:
      labels:
        app: beta-apps
    spec:
      restartPolicy: Always            # Always, OnFailure, Never
      containers:
      - name: beta-apps
        image: nginx
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app_type
                operator: In
                values:
                - beta

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: ckad-mock-exam-solution.com
      http:
        paths:
        - path: /video
          pathType: Prefix
          backend:
            service:
              name: my-video-service
              port:
                number: 8080

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx1401
  labels:
    app: nginx1401
spec:
  restartPolicy: Always            # Always, OnFailure, Never
  containers:
  - name: nginx1401
    image: nginx
    livessProbe:
      command:
      - /bin/sh
      - -c
      - ls /var/www/html/probe
      initialDelaySeconds: 5
      periodSeconds: 60

---
apiVersion: v1
kind: Pod
metadata:
  name: multi-pod
  labels:
    app: multi-pod
spec:
  restartPolicy: Always            # Always, OnFailure, Never
  containers:
  - name: jupiter
    image: nginx
    env:
    - name: type
      value: planet
  - name: europa
    image: busybox
    command:
    - /bin/sh
    - -c
    - sleep 4800
    env:
    - name: type
      value: moon

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: custom-volume
spec:
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /opt/data