user www-data;  # System user for Nginx worker processes (e.g., www-data on Debian/Ubuntu).
worker_processes auto; # Number of worker processes—auto matches CPU cores.
pid /run/nginx.pid; Number of worker processes—auto matches CPU cores.


events {        # Maximum simultaneous connections each worker can handle.
    worker_connections 1024;
}

http {          # Configures HTTP-level settings: compression (gzip), timeouts, logging formats, MIME types, and includes server blocks.

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    gzip            on;


    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';


    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    # Include virtual host definitions
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    server {   ## Server blocks, or virtual hosts, let you host multiple domains on one Nginx instance. Incoming requests are routed to the matching block based on server_name or IP address.
    listen 80; ## default port where nginx runs
    server_name example.com www.example.com;


    root /var/www/example.com/html; Path to the website’s document root.
    index index.html; Default file(s) served when a directory is requested


    location / {
        try_files $uri $uri/ =404; URI matching; try_files checks for existing files or directories and returns a 404 if not found.
    }
}
}